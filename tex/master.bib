@article{compss,
author = {Badia, Rosa M. and Conejero, Javier and Diaz, Carlos and Ejarque, Jorge and Lezzi, Daniele and Lordan, Francesc and Ramon-Cortes Vilarrodona, Cristian and Sirvent, Raul},
year = {2015},
month = {11},
pages = {},
title = {COMP Superscalar, an interoperable programming framework},
volume = {3},
journal = {SoftwareX},
doi = {10.1016/j.softx.2015.10.004}
}

@inproceedings{Zaharia:2010:SCC:1863103.1863113,
 author = {Zaharia, Matei and Chowdhury, Mosharaf and Franklin, Michael J. and Shenker, Scott and Stoica, Ion},
 title = {Spark: Cluster Computing with Working Sets},
 booktitle = {Proceedings of the 2Nd USENIX Conference on Hot Topics in Cloud Computing},
 series = {HotCloud'10},
 year = {2010},
 location = {Boston, MA},
 pages = {10--10},
 numpages = {1},
 url = {http://dl.acm.org/citation.cfm?id=1863103.1863113},
 acmid = {1863113},
 publisher = {USENIX Association},
 address = {Berkeley, CA, USA},
} 

@Article{Lordan2014,
author="Lordan, Francesc
and Tejedor, Enric
and Ejarque, Jorge
and Rafanell, Roger
and {\'A}lvarez, Javier
and Marozzo, Fabrizio
and Lezzi, Daniele
and Sirvent, Ra{\"u}l
and Talia, Domenico
and Badia, Rosa M.",
title="ServiceSs: An Interoperable Programming Framework for the Cloud",
journal="Journal of Grid Computing",
year="2014",
month="Mar",
day="01",
volume="12",
number="1",
pages="67--91",
abstract="The rise of virtualized and distributed infrastructures has led to new challenges to accomplish the effective use of compute resources through the design and orchestration of distributed applications. As legacy, monolithic applications are replaced with service-oriented applications, questions arise about the steps to be taken in order to maximize the usefulness of the infrastructures and to provide users with tools for the development and execution of distributed applications. One of the issues to be solved is the existence of multiple cloud solutions that are not interoperable, which forces the user to be locked to a specific provider or to continuously adapt applications. With the objective of simplifying the programmers challenges, ServiceSs provides a straightforward programming model and an execution framework that helps on abstracting applications from the actual execution environment. This paper presents how ServiceSs transparently interoperates with multiple providers implementing the appropriate interfaces to execute scientific applications on federated clouds.",
issn="1572-9184",
doi="10.1007/s10723-013-9272-5",
url="https://doi.org/10.1007/s10723-013-9272-5"
}


@article{pycompss,
author = {Enric Tejedor and Yolanda Becerra and Guillem Alomar and Anna Queralt and Rosa M Badia and Jordi Torres and Toni Cortes and Jesús Labarta},
title ={PyCOMPSs: Parallel computational workflows in Python},
journal = {The International Journal of High Performance Computing Applications},
volume = {31},
number = {1},
pages = {66-82},
year = {2017},
doi = {10.1177/1094342015594678},

URL = { 
        https://doi.org/10.1177/1094342015594678
    
},
eprint = { 
        https://doi.org/10.1177/1094342015594678
    
}
,
    abstract = { The use of the Python programming language for scientific computing has been gaining momentum in the last years. The fact that it is compact and readable and its complete set of scientific libraries are two important characteristics that favour its adoption. Nevertheless, Python still lacks a solution for easily parallelizing generic scripts on distributed infrastructures, since the current alternatives mostly require the use of APIs for message passing or are restricted to embarrassingly parallel computations. In that sense, this paper presents PyCOMPSs, a framework that facilitates the development of parallel computational workflows in Python. In this approach, the user programs her script in a sequential fashion and decorates the functions to be run as asynchronous parallel tasks. A runtime system is in charge of exploiting the inherent concurrency of the script, detecting the data dependencies between tasks and spawning them to the available resources. Furthermore, we show how this programming model can be built on top of a Big Data storage architecture, where the data stored in the backend is abstracted and accessed from the application in the form of persistent objects. }
}

@inproceedings{paraver,
author = {Labarta, Jesús and Gimenez, Judit and Martínez, E and González, P and Servat, Harald and Llort, Germán and Aguilar, Xavier},
year = {2005},
month = {09},
pages = {869-876},
title = {Scalability of Tracing and Visualization Tools}
}

@article{Lamport,
 author = {Lamport, Leslie},
 title = {Time, Clocks, and the Ordering of Events in a Distributed System},
 journal = {Commun. ACM},
 issue_date = {July 1978},
 volume = {21},
 number = {7},
 month = jul,
 year = {1978},
 issn = {0001-0782},
 pages = {558--565},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/359545.359563},
 doi = {10.1145/359545.359563},
 acmid = {359563},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {clock synchronization, computer networks, distributed systems, multiprocess systems},
} 

@INPROCEEDINGS{Flajolet07hyperloglog:the,
    author = {Philippe Flajolet and Éric Fusy and Olivier Gandouet and et al.},
    title = {Hyperloglog: The analysis of a near-optimal cardinality estimation algorithm},
    booktitle = {IN AOFA ’07: PROCEEDINGS OF THE 2007 INTERNATIONAL CONFERENCE ON ANALYSIS OF ALGORITHMS},
    year = {2007},
    publisher = {}
}

@inproceedings{40671,
title	= {HyperLogLog in Practice: Algorithmic Engineering of a State of The Art Cardinality Estimation Algorithm},
author	= {Stefan Heule and Marc Nunkesser and Alex Hall},
year	= {2013},
booktitle	= {Proceedings of the EDBT 2013 Conference},
address	= {Genoa, Italy}
}

@ARTICLE{Lloyd82leastsquares,
    author = {Stuart P. Lloyd},
    title = {Least squares quantization in pcm},
    journal = {IEEE Transactions on Information Theory},
    year = {1982},
    volume = {28},
    pages = {129--137}
}

@article{duran2011ompss,
  title={Ompss: a proposal for programming heterogeneous multi-core architectures},
  author={Duran, Alejandro and Ayguad{\'e}, Eduard and Badia, Rosa M and Labarta, Jes{\'u}s and Martinell, Luis and Martorell, Xavier and Planas, Judit},
  journal={Parallel processing letters},
  volume={21},
  number={02},
  pages={173--193},
  year={2011},
  publisher={World Scientific}
}

@article{DataClay,
author = {Martí, Jonathan and Queralt, Anna and Gasull, Daniel and Barceló, Alex and Costa, Juan and Cortes, Toni},
year = {2017},
month = {05},
pages = {},
title = {Dataclay: A distributed data store for effective inter-player data sharing},
volume = {131},
journal = {Journal of Systems and Software},
doi = {10.1016/j.jss.2017.05.080}
}

@inproceedings{alomar2015hecuba,
  title={Hecuba: Nosql made easy},
  author={Alomar, Guillem and Becerra Fontal, Yolanda and Torres Vi{\~n}als, Jordi},
  booktitle={BSC Doctoral Symposium (2nd: 2015: Barcelona)},
  pages={136--137},
  year={2015},
  organization={Barcelona Supercomputing Center}
}

@inproceedings{yoo2003slurm,
  title={Slurm: Simple linux utility for resource management},
  author={Yoo, Andy B and Jette, Morris A and Grondona, Mark},
  booktitle={Workshop on Job Scheduling Strategies for Parallel Processing},
  pages={44--60},
  year={2003},
  organization={Springer}
}

@inproceedings{zhou1992lsf,
  title={Lsf: Load sharing in large heterogeneous distributed systems},
  author={Zhou, Songnian},
  booktitle={I Workshop on cluster computing},
  volume={136},
  year={1992}
}